name: CI/CD for DigitalOcean

on:
  push:
    branches:
      - 'digitalOcean'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Build Common
        run: mvn clean install
        working-directory: ./Common
      - name: Build GYM
        run: mvn clean test -Dspring.profiles.active=GitHubActions
        working-directory: ./GymService
        env:
          ACTIVEMQ_PASSWORD: ${{ secrets.ACTIVEMQ_PASSWORD }}
          ACTIVEMQ_URL: ${{ secrets.ACTIVEMQ_URL }}
          ACTIVEMQ_USERNAME: ${{ secrets.ACTIVEMQ_USERNAME }}
          DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
          DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
          DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY}}
          GYM_PORT: ${{ secrets.GYM_PORT}}
      - name: Build REPORT
        run: mvn clean install -Dspring.profiles.active=GitHubActions
        working-directory: ./ReportService
        env:
          ACTIVEMQ_PASSWORD: ${{ secrets.ACTIVEMQ_PASSWORD }}
          ACTIVEMQ_URL: ${{ secrets.ACTIVEMQ_URL }}
          ACTIVEMQ_USERNAME: ${{ secrets.ACTIVEMQ_USERNAME }}
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY}}
          REPORT_PORT: ${{ secrets.REPORT_PORT}}
      - name: Copy files to DigitalOcean
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH" > ../private.key
          sudo chmod 600 ../private.key
          echo "$IP" > ~/.ssh/known_hosts
          scp -r -i ../private.key ./GymService/target/GymService*.jar $USER@$IP:~/app
          scp -r -i ../private.key ./ReportService/target/ReportService*.jar ${{ secrets.DIGITALOCEAN_DROPLET_USER }}@${{ secrets.DIGITALOCEAN_DROPLET_IP }}:~/app
          scp -r -i ../private.key ./run.sh ${{ secrets.DIGITALOCEAN_DROPLET_USER }}@${{ secrets.DIGITALOCEAN_DROPLET_IP }}:~/app
          scp -r -i ../private.key ./docker-compose.yml ${{ secrets.DIGITALOCEAN_DROPLET_USER }}@${{ secrets.DIGITALOCEAN_DROPLET_IP }}:~/app
          scp -r -i ../private.key ./DockerfileGymService ${{ secrets.DIGITALOCEAN_DROPLET_USER }}@${{ secrets.DIGITALOCEAN_DROPLET_IP }}:~/app
          scp -r -i ../private.key ./DockerfileReportService ${{ secrets.DIGITALOCEAN_DROPLET_USER }}@${{ secrets.DIGITALOCEAN_DROPLET_IP }}:~/app
        shell: bash
        env:
          SSH: ${{ secrets.DIGITALOCEAN_SSH_KEY}}
          USER: ${{ secrets.DIGITALOCEAN_DROPLET_USER }}
          IP: ${{ secrets.DIGITALOCEAN_DROPLET_IP }}
      - name: Set environment variables on DigitalOcean
        run: |
          ssh -i ${{ secrets.DIGITALOCEAN_SSH_KEY }} ${{ secrets.DIGITALOCEAN_DROPLET_USER }}@${{ secrets.DIGITALOCEAN_DROPLET_IP }} 
          "export DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }};
          export DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }};
          export DATABASE_NAME=${{ secrets.DATABASE_NAME }};
          export DATABASE_PORT=${{ secrets.DATABASE_PORT }};
          export GYM_PORT=${{ secrets.GYM_PORT }};
          export REPORT_PORT=${{ secrets.REPORT_PORT }};
          export ACTIVEMQ_PORT_JMS=${{ secrets.ACTIVEMQ_PORT_JMS }};
          export ACTIVEMQ_PORT=${{ secrets.ACTIVEMQ_PORT }};
          export MONGO_PORT=${{ secrets.MONGO_PORT }}"
      - name: Start application
        run: |
          ssh -i ${{ secrets.DIGITALOCEAN_SSH_KEY }} ${{ secrets.DIGITALOCEAN_DROPLET_USER }}@${{ secrets.DIGITALOCEAN_DROPLET_IP }} "docker-compose build && docker-compose up -d"